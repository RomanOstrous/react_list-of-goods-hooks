{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","sortType","setSortType","isReversed","setisReversed","visibleGood","goods","sort","reverse","preparedGoods","good1","good2","name","localeCompare","length","getPreparedGoods","className","type","cn","onClick","map","value","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,YAAAA,E,iBAAAA,M,KAkCE,IAAME,EAAgB,WAC3B,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EAjCR,SACEC,EACAC,EACAC,GAEA,IAAMC,EAAa,YAAOH,GAqB1B,OAnBa,OAATC,GACFE,EAAcF,MAAK,SAACG,EAAOC,GACzB,OAAQJ,GACN,KAAKV,EAASe,KACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKd,EAASiB,OACZ,OAAOJ,EAAMI,OAASH,EAAMG,OAE9B,QACE,OAAO,MAKXN,GACFC,EAAcD,UAGTC,EAOaM,CAAiBjB,EAAiBG,EAAUE,GAOhE,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYjB,IAAaJ,EAASe,OAEtCO,QAAS,kBAAMjB,EAAYL,EAASe,OANtC,iCAWA,wBACEK,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYjB,IAAaJ,EAASiB,SAEtCK,QAAS,kBAAMjB,EAAYL,EAASiB,SANtC,4BAWA,wBACEG,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CAAE,YAAaf,IAClDgB,QAAS,kBAAMf,GAAeD,IAHhC,sBAQEF,GAAYE,IAEZ,wBACEc,KAAK,SACLD,UAAU,4BACVG,QA3CI,WACZjB,EAAY,IACZE,GAAc,IAsCR,sBAUJ,6BACGC,EAAYe,KAAI,SAAAC,GAAK,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YC9GjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4a1eecce.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  name = 'name',\n  length = 'length',\n}\n\nfunction getPreparedGoods(\n  goods: string[],\n  sort: string,\n  reverse: boolean,\n): string[] {\n  const preparedGoods = [...goods];\n\n  if (sort !== null) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sort) {\n        case SortType.name:\n          return good1.localeCompare(good2);\n\n        case SortType.length:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState('');\n  const [isReversed, setisReversed] = useState(false);\n\n  const visibleGood = getPreparedGoods(goodsFromServer, sortType, isReversed);\n\n  const reset = () => {\n    setSortType('');\n    setisReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-info',\n            { 'is-light': sortType !== SortType.name },\n          )}\n          onClick={() => setSortType(SortType.name)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-success',\n            { 'is-light': sortType !== SortType.length },\n          )}\n          onClick={() => setSortType(SortType.length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', { 'is-light': !isReversed })}\n          onClick={() => setisReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortType || isReversed)\n        && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGood.map(value => (\n          <li\n            data-cy=\"Good\"\n            key={value}\n          >\n            {value}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}